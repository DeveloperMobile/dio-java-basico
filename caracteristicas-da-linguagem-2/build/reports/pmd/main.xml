<?xml version="1.0" encoding="UTF-8"?>
<pmd xmlns="http://pmd.sourceforge.net/report/2.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pmd.sourceforge.net/report/2.0.0 http://pmd.sourceforge.net/report_2_0_0.xsd" version="6.36.0" timestamp="2021-07-06T19:12:01.325">
<file name="/home/tiago/Documentos/dio-java-basico/caracteristicas-da-linguagem-2/src/main/java/fors/For.java">
<violation beginline="3" endline="13" begincolumn="18" endcolumn="1" rule="UseUtilityClass" ruleset="Design" package="fors" class="For" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_design.html#useutilityclass" priority="3">
All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
</violation>
<violation beginline="3" endline="13" begincolumn="8" endcolumn="1" rule="ShortClassName" ruleset="Code Style" package="fors" class="For" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#shortclassname" priority="4">
Avoid short class names like For
</violation>
<violation beginline="4" endline="4" begincolumn="29" endcolumn="41" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="fors" class="For" method="main" variable="args" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'args' is not assigned and could be declared final
</violation>
</file>
<file name="/home/tiago/Documentos/dio-java-basico/caracteristicas-da-linguagem-2/src/main/java/ifs/If.java">
<violation beginline="3" endline="19" begincolumn="17" endcolumn="1" rule="UseUtilityClass" ruleset="Design" package="ifs" class="If" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_design.html#useutilityclass" priority="3">
All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
</violation>
<violation beginline="3" endline="19" begincolumn="8" endcolumn="1" rule="ShortClassName" ruleset="Code Style" package="ifs" class="If" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#shortclassname" priority="4">
Avoid short class names like If
</violation>
<violation beginline="4" endline="4" begincolumn="29" endcolumn="41" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="ifs" class="If" method="main" variable="args" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'args' is not assigned and could be declared final
</violation>
<violation beginline="14" endline="14" begincolumn="13" endcolumn="52" rule="ControlStatementBraces" ruleset="Code Style" package="ifs" class="If" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#controlstatementbraces" priority="3">
This statement should have braces
</violation>
</file>
<file name="/home/tiago/Documentos/dio-java-basico/caracteristicas-da-linguagem-2/src/main/java/intstreams/IntStrams.java">
<violation beginline="5" endline="13" begincolumn="24" endcolumn="1" rule="UseUtilityClass" ruleset="Design" package="intstreams" class="IntStrams" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_design.html#useutilityclass" priority="3">
All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
</violation>
<violation beginline="6" endline="6" begincolumn="29" endcolumn="41" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="intstreams" class="IntStrams" method="main" variable="args" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'args' is not assigned and could be declared final
</violation>
<violation beginline="7" endline="7" begincolumn="9" endcolumn="60" rule="LawOfDemeter" ruleset="Design" package="intstreams" class="IntStrams" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
<violation beginline="9" endline="11" begincolumn="9" endcolumn="10" rule="LawOfDemeter" ruleset="Design" package="intstreams" class="IntStrams" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (method chain calls)
</violation>
</file>
<file name="/home/tiago/Documentos/dio-java-basico/caracteristicas-da-linguagem-2/src/main/java/operadores/Igualdade.java">
<violation beginline="3" endline="29" begincolumn="24" endcolumn="1" rule="UseUtilityClass" ruleset="Design" package="operadores" class="Igualdade" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_design.html#useutilityclass" priority="3">
All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
</violation>
<violation beginline="4" endline="4" begincolumn="29" endcolumn="41" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="operadores" class="Igualdade" method="main" variable="args" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'args' is not assigned and could be declared final
</violation>
<violation beginline="7" endline="7" begincolumn="23" endcolumn="24" rule="AvoidLiteralsInIfCondition" ruleset="Error Prone" package="operadores" class="Igualdade" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_errorprone.html#avoidliteralsinifcondition" priority="3">
Avoid using Literals in Conditional Statements
</violation>
<violation beginline="7" endline="7" begincolumn="23" endcolumn="24" rule="AvoidLiteralsInIfCondition" ruleset="Error Prone" package="operadores" class="Igualdade" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_errorprone.html#avoidliteralsinifcondition" priority="3">
Avoid using Literals in Conditional Statements
</violation>
<violation beginline="13" endline="17" begincolumn="9" endcolumn="9" rule="ConfusingTernary" ruleset="Code Style" package="operadores" class="Igualdade" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#confusingternary" priority="3">
Avoid if (x != y) ..; else ..;
</violation>
<violation beginline="13" endline="13" begincolumn="23" endcolumn="24" rule="AvoidLiteralsInIfCondition" ruleset="Error Prone" package="operadores" class="Igualdade" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_errorprone.html#avoidliteralsinifcondition" priority="3">
Avoid using Literals in Conditional Statements
</violation>
<violation beginline="13" endline="13" begincolumn="23" endcolumn="24" rule="AvoidLiteralsInIfCondition" ruleset="Error Prone" package="operadores" class="Igualdade" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_errorprone.html#avoidliteralsinifcondition" priority="3">
Avoid using Literals in Conditional Statements
</violation>
<violation beginline="25" endline="25" begincolumn="14" endcolumn="30" rule="LiteralsFirstInComparisons" ruleset="Best Practices" package="operadores" class="Igualdade" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_bestpractices.html#literalsfirstincomparisons" priority="3">
Position literals first in String comparisons
</violation>
<violation beginline="25" endline="25" begincolumn="14" endcolumn="30" rule="LawOfDemeter" ruleset="Design" package="operadores" class="Igualdade" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
</file>
<file name="/home/tiago/Documentos/dio-java-basico/caracteristicas-da-linguagem-2/src/main/java/operadores/Incremento.java">
<violation beginline="3" endline="12" begincolumn="25" endcolumn="1" rule="UseUtilityClass" ruleset="Design" package="operadores" class="Incremento" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_design.html#useutilityclass" priority="3">
All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
</violation>
<violation beginline="4" endline="4" begincolumn="29" endcolumn="41" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="operadores" class="Incremento" method="main" variable="args" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'args' is not assigned and could be declared final
</violation>
</file>
<file name="/home/tiago/Documentos/dio-java-basico/caracteristicas-da-linguagem-2/src/main/java/operadores/Logicos.java">
<violation beginline="3" endline="38" begincolumn="22" endcolumn="1" rule="UseUtilityClass" ruleset="Design" package="operadores" class="Logicos" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_design.html#useutilityclass" priority="3">
All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
</violation>
<violation beginline="4" endline="4" begincolumn="29" endcolumn="41" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="operadores" class="Logicos" method="main" variable="args" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'args' is not assigned and could be declared final
</violation>
<violation beginline="9" endline="9" begincolumn="27" endcolumn="43" rule="LiteralsFirstInComparisons" ruleset="Best Practices" package="operadores" class="Logicos" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_bestpractices.html#literalsfirstincomparisons" priority="3">
Position literals first in String comparisons
</violation>
<violation beginline="9" endline="9" begincolumn="27" endcolumn="43" rule="LawOfDemeter" ruleset="Design" package="operadores" class="Logicos" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="13" endline="13" begincolumn="27" endcolumn="43" rule="LiteralsFirstInComparisons" ruleset="Best Practices" package="operadores" class="Logicos" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_bestpractices.html#literalsfirstincomparisons" priority="3">
Position literals first in String comparisons
</violation>
<violation beginline="13" endline="13" begincolumn="27" endcolumn="43" rule="LawOfDemeter" ruleset="Design" package="operadores" class="Logicos" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="29" endline="29" begincolumn="37" endcolumn="48" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="operadores" class="Logicos" method="verifica" variable="letra" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'letra' is not assigned and could be declared final
</violation>
<violation beginline="31" endline="31" begincolumn="16" endcolumn="32" rule="LiteralsFirstInComparisons" ruleset="Best Practices" package="operadores" class="Logicos" method="verifica" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_bestpractices.html#literalsfirstincomparisons" priority="3">
Position literals first in String comparisons
</violation>
<violation beginline="34" endline="34" begincolumn="37" endcolumn="50" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="operadores" class="Logicos" method="verifica" variable="numero" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'numero' is not assigned and could be declared final
</violation>
</file>
<file name="/home/tiago/Documentos/dio-java-basico/caracteristicas-da-linguagem-2/src/main/java/operadores/Matematicos.java">
<violation beginline="3" endline="15" begincolumn="26" endcolumn="1" rule="UseUtilityClass" ruleset="Design" package="operadores" class="Matematicos" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_design.html#useutilityclass" priority="3">
All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
</violation>
<violation beginline="4" endline="4" begincolumn="29" endcolumn="41" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="operadores" class="Matematicos" method="main" variable="args" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'args' is not assigned and could be declared final
</violation>
</file>
<file name="/home/tiago/Documentos/dio-java-basico/caracteristicas-da-linguagem-2/src/main/java/operadores/Relacionais.java">
<violation beginline="3" endline="17" begincolumn="26" endcolumn="1" rule="UseUtilityClass" ruleset="Design" package="operadores" class="Relacionais" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_design.html#useutilityclass" priority="3">
All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
</violation>
<violation beginline="4" endline="4" begincolumn="29" endcolumn="41" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="operadores" class="Relacionais" method="main" variable="args" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'args' is not assigned and could be declared final
</violation>
<violation beginline="7" endline="7" begincolumn="22" endcolumn="23" rule="AvoidLiteralsInIfCondition" ruleset="Error Prone" package="operadores" class="Relacionais" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_errorprone.html#avoidliteralsinifcondition" priority="3">
Avoid using Literals in Conditional Statements
</violation>
<violation beginline="7" endline="7" begincolumn="22" endcolumn="23" rule="AvoidLiteralsInIfCondition" ruleset="Error Prone" package="operadores" class="Relacionais" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_errorprone.html#avoidliteralsinifcondition" priority="3">
Avoid using Literals in Conditional Statements
</violation>
<violation beginline="9" endline="9" begincolumn="30" endcolumn="31" rule="AvoidLiteralsInIfCondition" ruleset="Error Prone" package="operadores" class="Relacionais" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_errorprone.html#avoidliteralsinifcondition" priority="3">
Avoid using Literals in Conditional Statements
</violation>
<violation beginline="9" endline="9" begincolumn="30" endcolumn="31" rule="AvoidLiteralsInIfCondition" ruleset="Error Prone" package="operadores" class="Relacionais" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_errorprone.html#avoidliteralsinifcondition" priority="3">
Avoid using Literals in Conditional Statements
</violation>
<violation beginline="11" endline="11" begincolumn="30" endcolumn="30" rule="AvoidLiteralsInIfCondition" ruleset="Error Prone" package="operadores" class="Relacionais" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_errorprone.html#avoidliteralsinifcondition" priority="3">
Avoid using Literals in Conditional Statements
</violation>
<violation beginline="11" endline="11" begincolumn="30" endcolumn="30" rule="AvoidLiteralsInIfCondition" ruleset="Error Prone" package="operadores" class="Relacionais" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_errorprone.html#avoidliteralsinifcondition" priority="3">
Avoid using Literals in Conditional Statements
</violation>
</file>
<file name="/home/tiago/Documentos/dio-java-basico/caracteristicas-da-linguagem-2/src/main/java/strings/StringBuilder.java">
<violation beginline="3" endline="16" begincolumn="28" endcolumn="1" rule="UseUtilityClass" ruleset="Design" package="strings" class="StringBuilder" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_design.html#useutilityclass" priority="3">
All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
</violation>
<violation beginline="4" endline="4" begincolumn="29" endcolumn="41" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="strings" class="StringBuilder" method="main" variable="args" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'args' is not assigned and could be declared final
</violation>
<violation beginline="5" endline="5" begincolumn="9" endcolumn="27" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="strings" class="StringBuilder" method="main" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'nome' could be declared final
</violation>
<violation beginline="7" endline="7" begincolumn="33" endcolumn="55" rule="UnnecessaryFullyQualifiedName" ruleset="Code Style" package="strings" class="StringBuilder" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname" priority="4">
Unnecessary use of fully qualified name 'java.lang.StringBuilder' due to existing implicit import 'java.lang.*'
</violation>
<violation beginline="13" endline="13" begincolumn="28" endcolumn="79" rule="LawOfDemeter" ruleset="Design" package="strings" class="StringBuilder" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
<violation beginline="13" endline="13" begincolumn="58" endcolumn="73" rule="LawOfDemeter" ruleset="Design" package="strings" class="StringBuilder" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
</file>
<file name="/home/tiago/Documentos/dio-java-basico/caracteristicas-da-linguagem-2/src/main/java/strings/StringFormat.java">
<violation beginline="3" endline="17" begincolumn="27" endcolumn="1" rule="UseUtilityClass" ruleset="Design" package="strings" class="StringFormat" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_design.html#useutilityclass" priority="3">
All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
</violation>
<violation beginline="4" endline="4" begincolumn="29" endcolumn="41" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="strings" class="StringFormat" method="main" variable="args" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'args' is not assigned and could be declared final
</violation>
<violation beginline="5" endline="5" begincolumn="9" endcolumn="26" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="strings" class="StringFormat" method="main" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'nome' could be declared final
</violation>
<violation beginline="6" endline="6" begincolumn="9" endcolumn="32" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="strings" class="StringFormat" method="main" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'sobrenome' could be declared final
</violation>
</file>
<file name="/home/tiago/Documentos/dio-java-basico/caracteristicas-da-linguagem-2/src/main/java/strings/Strings.java">
<violation beginline="3" endline="37" begincolumn="22" endcolumn="1" rule="UseUtilityClass" ruleset="Design" package="strings" class="Strings" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_design.html#useutilityclass" priority="3">
All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
</violation>
<violation beginline="4" endline="4" begincolumn="29" endcolumn="41" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="strings" class="Strings" method="main" variable="args" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'args' is not assigned and could be declared final
</violation>
<violation beginline="5" endline="5" begincolumn="9" endcolumn="26" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="strings" class="Strings" method="main" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'nome' could be declared final
</violation>
<violation beginline="6" endline="6" begincolumn="9" endcolumn="32" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="strings" class="Strings" method="main" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'sobrenome' could be declared final
</violation>
<violation beginline="12" endline="12" begincolumn="22" endcolumn="49" rule="StringInstantiation" ruleset="Performance" package="strings" class="Strings" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_performance.html#stringinstantiation" priority="2">
Avoid instantiating String objects; this is usually unnecessary.
</violation>
<violation beginline="12" endline="12" begincolumn="9" endcolumn="49" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="strings" class="Strings" method="main" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'string' could be declared final
</violation>
<violation beginline="18" endline="18" begincolumn="40" endcolumn="59" rule="UseLocaleWithCaseConversions" ruleset="Error Prone" package="strings" class="Strings" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_errorprone.html#uselocalewithcaseconversions" priority="3">
When doing a String.toLowerCase()/toUpperCase() call, use a Locale
</violation>
<violation beginline="18" endline="18" begincolumn="40" endcolumn="59" rule="UseLocaleWithCaseConversions" ruleset="Error Prone" package="strings" class="Strings" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_errorprone.html#uselocalewithcaseconversions" priority="3">
When doing a String.toLowerCase()/toUpperCase() call, use a Locale
</violation>
<violation beginline="19" endline="19" begincolumn="40" endcolumn="59" rule="UseLocaleWithCaseConversions" ruleset="Error Prone" package="strings" class="Strings" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_errorprone.html#uselocalewithcaseconversions" priority="3">
When doing a String.toLowerCase()/toUpperCase() call, use a Locale
</violation>
<violation beginline="19" endline="19" begincolumn="40" endcolumn="59" rule="UseLocaleWithCaseConversions" ruleset="Error Prone" package="strings" class="Strings" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_errorprone.html#uselocalewithcaseconversions" priority="3">
When doing a String.toLowerCase()/toUpperCase() call, use a Locale
</violation>
<violation beginline="23" endline="23" begincolumn="42" endcolumn="72" rule="LiteralsFirstInComparisons" ruleset="Best Practices" package="strings" class="Strings" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_bestpractices.html#literalsfirstincomparisons" priority="3">
Position literals first in String comparisons
</violation>
<violation beginline="24" endline="24" begincolumn="52" endcolumn="92" rule="LiteralsFirstInComparisons" ruleset="Best Practices" package="strings" class="Strings" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_bestpractices.html#literalsfirstincomparisons" priority="3">
Position literals first in String comparisons
</violation>
</file>
<file name="/home/tiago/Documentos/dio-java-basico/caracteristicas-da-linguagem-2/src/main/java/whiles/While.java">
<violation beginline="3" endline="18" begincolumn="20" endcolumn="1" rule="UseUtilityClass" ruleset="Design" package="whiles" class="While" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_design.html#useutilityclass" priority="3">
All methods are static.  Consider using a utility class instead. Alternatively, you could add a private constructor or make the class abstract to silence this warning.
</violation>
<violation beginline="4" endline="4" begincolumn="29" endcolumn="41" rule="MethodArgumentCouldBeFinal" ruleset="Code Style" package="whiles" class="While" method="main" variable="args" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#methodargumentcouldbefinal" priority="3">
Parameter 'args' is not assigned and could be declared final
</violation>
<violation beginline="5" endline="5" begincolumn="13" endcolumn="13" rule="ShortVariable" ruleset="Code Style" package="whiles" class="While" method="main" variable="x" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like x
</violation>
<violation beginline="12" endline="12" begincolumn="13" endcolumn="13" rule="ShortVariable" ruleset="Code Style" package="whiles" class="While" method="main" variable="y" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like y
</violation>
<violation beginline="16" endline="16" begincolumn="18" endcolumn="20" rule="UnusedAssignment" ruleset="Best Practices" package="whiles" class="While" method="main" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_bestpractices.html#unusedassignment" priority="3">
The updated value of variable 'y' is never used
</violation>
</file>
<configerror rule="LoosePackageCoupling" msg="No packages or classes specified"/>
</pmd>
